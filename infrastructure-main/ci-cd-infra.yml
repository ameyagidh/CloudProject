# CloudFormation template version and description
AWSTemplateFormatVersion: "2010-09-09"
Description: Template for setting up IAM policies for GitHub Actions to interact with AWS services.

# Parameters for the template
Parameters:
  CodeDeployBucketName:
    Type: String
    Default: "codedeploy.ebenezerwilliams.me"
  GHActionsUser: 
    Type: String
    Default: "ghactions-app"

# Resources section defining IAM policies
Resources:

  # IAM policy allowing GitHub Actions to upload to S3
  GHUploadToS3Policy:
    Type: AWS::IAM::Policy
    Properties:
      Users:
        - "ghactions-app"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "s3:Get*"
              - "s3:List*"
              - "s3:PutObject"
            Resource:
              - !Sub 'arn:aws:s3:::${CodeDeployBucketName}/'
              - !Sub 'arn:aws:s3:::${CodeDeployBucketName}/*'
      PolicyName: "GHUploadToS3"

  # IAM policy allowing GitHub Actions to deploy code with CodeDeploy
  myGitCodeDeploy:
    Type: AWS::IAM::Policy
    Properties:
      Users:
        - "ghactions-app"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "codedeploy:RegisterApplicationRevision"
              - "codedeploy:GetApplicationRevision"
            Resource:
              - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:application:mywebapp'
          - Effect: Allow
            Action:
              - "codedeploy:CreateDeployment"
              - "codedeploy:GetDeployment"
            Resource:
              - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:mywebapp/mywebapp-deployment'
          - Effect: Allow
            Action:
              - "codedeploy:GetDeploymentConfig"
            Resource:
              - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.OneAtATime'
              - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.HalfAtATime'
              - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.AllAtOnce'
      PolicyName: "myGitCodeDeploy"

  # IAM policy allowing GitHub Actions to create EC2 AMIs
  GitEC2Ami:
    Type: AWS::IAM::Policy
    Properties:
      Users:
        - "ghactions-app"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "ec2:AttachVolume"
              - "ec2:AuthorizeSecurityGroupIngress"
              - "ec2:CopyImage"
              - "ec2:CreateImage"
              - "ec2:CreateKeypair"
              - "ec2:CreateSecurityGroup"
              - "ec2:CreateSnapshot"
              - "ec2:CreateTags"
              - "ec2:CreateVolume"
              - "ec2:DeleteKeyPair"
              - "ec2:DeleteSecurityGroup"
              - "ec2:DeleteSnapshot"
              - "ec2:DeleteVolume"
              - "ec2:DeregisterImage"
              - "ec2:DescribeImageAttribute"
              - "ec2:DescribeImages"
              - "ec2:DescribeInstances"
              - "ec2:DescribeInstanceStatus"
              - "ec2:DescribeRegions"
              - "ec2:DescribeSecurityGroups"
              - "ec2:DescribeSnapshots"
              - "ec2:DescribeSubnets"
              - "ec2:DescribeTags"
              - "ec2:DescribeVolumes"
              - "ec2:DetachVolume"
              - "ec2:GetPasswordData"
              - "ec2:ModifyImageAttribute"
              - "ec2:ModifyInstanceAttribute"
              - "ec2:ModifySnapshotAttribute"
              - "ec2:RegisterImage"
              - "ec2:RunInstances"
              - "ec2:StopInstances"
              - "ec2:TerminateInstances"
            Resource:
              - "*"
      PolicyName: "GitEC2Ami"
